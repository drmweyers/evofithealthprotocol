# SECURITY HARDENED ENVIRONMENT CONFIGURATION
# Copy this to .env and update with your secure values
# IMPORTANT: Never commit real API keys or secrets to version control!

# Database Configuration - SECURE CREDENTIALS
DATABASE_URL=postgresql://healthprotocol_user:healthprotocol_secure_pass_2024@localhost:5434/evofithealthprotocol_db
POSTGRES_USER=healthprotocol_user
POSTGRES_PASSWORD=healthprotocol_secure_pass_2024
POSTGRES_DB=evofithealthprotocol_db
DB_SSL_MODE=require

# JWT Configuration - GENERATE STRONG SECRETS
# Generate with: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=REPLACE_WITH_STRONG_64_BYTE_HEX_SECRET_FROM_CRYPTO_RANDOM
JWT_REFRESH_SECRET=REPLACE_WITH_ANOTHER_STRONG_64_BYTE_HEX_SECRET_FROM_CRYPTO_RANDOM
BCRYPT_SALT_ROUNDS=14
ACCESS_TOKEN_EXPIRY=15m
REFRESH_TOKEN_EXPIRY=7d

# Server Configuration
NODE_ENV=development
PORT=3500

# Frontend URL (for CORS) - RESTRICT IN PRODUCTION
FRONTEND_URL=http://localhost:3500

# Email Configuration (Resend - for invitations)
RESEND_API_KEY=REPLACE_WITH_REAL_RESEND_API_KEY
FROM_EMAIL=HealthProtocol <noreply@yourdomain.com>

# Cookie Configuration - GENERATE STRONG SECRET
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
COOKIE_SECRET=REPLACE_WITH_STRONG_32_BYTE_HEX_SECRET_FROM_CRYPTO_RANDOM

# Security Logging
LOG_LEVEL=info
SECURITY_LOG_ENABLED=true

# AWS S3 Configuration (for profile image uploads)
# WARNING: Never commit real AWS credentials!
AWS_ACCESS_KEY_ID=REPLACE_WITH_AWS_ACCESS_KEY
AWS_SECRET_ACCESS_KEY=REPLACE_WITH_AWS_SECRET_KEY
AWS_REGION=us-east-1
AWS_S3_BUCKET_NAME=healthprotocol-uploads-secure
AWS_ENDPOINT=https://your-region.digitaloceanspaces.com

# OpenAI Configuration (if using AI features)
# WARNING: Never commit real API keys!
OPENAI_API_KEY=REPLACE_WITH_OPENAI_API_KEY
OPENAI_ORGANIZATION_KEY=REPLACE_WITH_OPENAI_ORG_KEY

# Security Headers Configuration
SECURITY_HEADERS_ENABLED=true
CSP_ENABLED=true
HSTS_ENABLED=true

# Rate Limiting Configuration
RATE_LIMIT_ENABLED=true
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX=100

# Session Security
SESSION_SECURE=true
SESSION_HTTP_ONLY=true
SESSION_SAME_SITE=strict

# Security Notes:
# 1. Generate all secrets with crypto.randomBytes() - NEVER use weak passwords
# 2. Use environment-specific values (dev/staging/prod)
# 3. Rotate secrets regularly (every 90 days minimum)
# 4. Never commit real secrets to version control
# 5. Use proper secret management in production (HashiCorp Vault, AWS Secrets Manager)
# 6. Enable SSL/TLS in production
# 7. Use strong database passwords (20+ characters, mixed case, numbers, symbols)
# 8. Monitor access logs for suspicious activity
# 9. Implement backup and disaster recovery procedures
# 10. Regular security audits and penetration testing