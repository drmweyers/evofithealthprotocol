{
  "permissions": {
    "allow": [
      "Bash(npm run check:*)",
      "Bash(curl:*)",
      "Bash(npx tsx:*)",
      "Bash(node:*)",
      "Bash(ls:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(docker:*)",
      "Bash(powershell:*)",
      "Bash(timeout:*)",
      "Bash(npm test:*)",
      "Bash(rm:*)",
      "Bash(grep:*)",
      "Bash(for f in *.tsx)",
      "Bash(do if grep -q \"@/\" \"$f\")",
      "Bash(then echo \"$f\")",
      "Bash(fi)",
      "Bash(done)",
      "Bash(find:*)",
      "Bash(npm run build:*)",
      "Bash(sed:*)",
      "Bash(do if [ -f \"$f\" ])",
      "Bash(then sed -i 's|@/components/ui/|./ui/|g' \"$f\")",
      "Bash(then sed -i 's|@/components/ui/|./|g' \"$f\")",
      "Bash(cat:*)",
      "Bash(export:*)",
      "Bash(for i in {1..5})",
      "Bash(do echo \"Test $i:\")",
      "Bash(time curl:*)",
      "Bash(for i in {1..3})",
      "Bash(do echo \"PDF Export Test $i:\")",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(git config:*)",
      "Bash(git commit:*)",
      "Bash(npm run dev:*)",
      "Bash(npm run typecheck:*)",
      "Bash(npm run migrate:*)",
      "Bash(npm run test:*)",
      "Bash(npm run:*)",
      "Bash(DATABASE_URL=postgresql://postgres:postgres@localhost:5432/fitmeal npm run db:push)",
      "Bash(DATABASE_URL=postgresql://postgres:postgres@localhost:5432/fitmeal npm run test:trainer-meal-plans)",
      "Bash(npm install:*)",
      "Bash(ctrl+c)",
      "Bash(NODE_ENV=development tsx test-email-directly.js)",
      "Bash(NODE_ENV=development npx tsx test-email-directly.js)",
      "Bash(RESEND_API_KEY=re_BwMktDkm_L7QQMZRhrMmBVj64bn2yehhp NODE_ENV=development npx tsx test-email-directly.js)",
      "Bash(RESEND_API_KEY=re_BwMktDkm_L7QQMZRhrMmBVj64bn2yehhp FROM_EMAIL=\"FitnessMealPlanner <onboarding@resend.dev>\" NODE_ENV=development npx tsx test-email-directly.js)",
      "Bash(npx vitest run:*)",
      "Bash(DATABASE_URL=postgresql://postgres:postgres@localhost:5432/fitmeal_test npm run db:push)",
      "Bash(mkdir:*)",
      "Bash(npx playwright test:*)",
      "Bash(mv:*)",
      "Bash(DATABASE_URL=postgresql://postgres:postgres@localhost:5433/fitmeal npm run generate:test-data)",
      "Bash(DATABASE_URL=postgresql://postgres:postgres@localhost:5433/fitmeal npm run enhance:test-data)",
      "Bash(DATABASE_URL=postgresql://postgres:postgres@localhost:5433/fitmeal npm run update:test-accounts)",
      "Bash(DATABASE_URL=postgresql://postgres:postgres@localhost:5433/fitmeal psql -c \"SELECT email, username, role FROM users WHERE email LIKE ''%test%'';\")",
      "Bash(DATABASE_URL=postgresql://postgres:postgres@localhost:5433/fitmeal tsx scripts/check-accounts.js)",
      "Bash(DATABASE_URL=postgresql://postgres:postgres@localhost:5433/fitmeal npx tsx scripts/check-accounts.js)",
      "Bash(DATABASE_URL=postgresql://postgres:postgres@localhost:5433/fitmeal npx tsx scripts/enhance-customer-profile.js)",
      "Bash(DATABASE_URL=postgresql://postgres:postgres@localhost:5433/fitmeal psql -c \"SELECT email, username, role, firstName, lastName FROM users WHERE email LIKE ''%test%'';\")",
      "Bash(DATABASE_URL=postgresql://postgres:postgres@localhost:5433/fitmeal npx tsx scripts/verify-accounts.js)",
      "Bash(DATABASE_URL=postgresql://postgres:postgres@localhost:5433/fitmeal npx tsx scripts/fix-customer-data.js)",
      "Bash(npx playwright:*)",
      "Bash(chmod:*)",
      "Bash(npm audit:*)",
      "Bash(POSTGRES_USER=postgres POSTGRES_PASSWORD=postgres POSTGRES_DB=evofithealthprotocol_db docker-compose --profile dev up -d)",
      "Bash(git checkout:*)",
      "Bash(gh repo create:*)",
      "Bash(npx tsc:*)",
      "Bash(npm uninstall:*)",
      "Bash(taskkill:*)",
      "Bash(Get-Process node)",
      "Bash(NODE_ENV=production PORT=5000 npx tsx --env-file=.env server/index.ts)",
      "Bash(npx drizzle-kit:*)",
      "Bash(NODE_ENV=development npx tsx --env-file=.env server/index.ts)",
      "Bash(git restore:*)",
      "Bash(git rm:*)",
      "Bash(git reset:*)",
      "Bash(git log:*)",
      "mcp__github__get_file_contents",
      "Bash(gh repo view:*)",
      "Bash(gh repo edit:*)",
      "Bash(npm search:*)",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "Bash(vite build)"
    ],
    "deny": [],
    "additionalDirectories": [
      "C:\\c\\Users\\drmwe\\claude-workspace",
      "C:\\"
    ]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "github",
    "context7",
    "digitalocean"
  ]
}